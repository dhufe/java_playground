package org.example.wizardpages;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import org.example.wizard.AbstractWizardPage;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;

public class CreationPage extends AbstractWizardPage {
    private final AbstractWizardPage nextPage = new BagitInfoPage();

    private JButton OpenSourceButton;
    private JTextField OpenSourceText;
    private JButton OpenDestinationButton;
    private JTextField OpenDestinationText;
    private JPanel CreationMainPanel;
    private boolean sourceChoosen = false;
    private boolean destinationChoosen = false;

    public CreationPage() {
        $$$setupUI$$$();
        add(CreationMainPanel);

        OpenSourceButton.addActionListener(e -> openSourceChooser());
        OpenDestinationButton.addActionListener(e -> openDestinationChooser());

    }

    @Override
    protected AbstractWizardPage getNextPage() {
        return this.nextPage;
    }

    @Override
    protected boolean isCancelAllowed() {
        return true;
    }

    @Override
    protected boolean isPreviousAllowed() {
        return true;
    }

    @Override
    protected boolean isNextAllowed() {
        return (sourceChoosen && destinationChoosen) && (!this.OpenDestinationText.getText().equals(this.OpenSourceText.getText()));
    }

    @Override
    protected boolean isFinishAllowed() {
        return false;
    }

    private void openSourceChooser() {
        JFileChooser choice = new JFileChooser();
        this.sourceChoosen = false;
        choice.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int result = choice.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            this.OpenSourceText.setText(choice.getSelectedFile().getAbsolutePath());
            this.sourceChoosen = true;
        } else if (result == JFileChooser.CANCEL_OPTION) {
            System.out.println("Cancel was selected");
        }
        updateWizardButtons();
    }

    private void openDestinationChooser() {
        JFileChooser choice = new JFileChooser();
        this.destinationChoosen = false;
        choice.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int result = choice.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            this.OpenDestinationText.setText(choice.getSelectedFile().getAbsolutePath());
            this.destinationChoosen = true;
        } else if (result == JFileChooser.CANCEL_OPTION) {
            System.out.println("Cancel was selected");
        }
        updateWizardButtons();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        CreationMainPanel = new JPanel();
        CreationMainPanel.setLayout(new GridBagLayout());
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        CreationMainPanel.add(panel1, gbc);
        panel1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        OpenSourceButton = new JButton();
        OpenSourceButton.setText("Öffnen");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(OpenSourceButton, gbc);
        OpenSourceText = new JTextField();
        OpenSourceText.setEditable(false);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(OpenSourceText, gbc);
        OpenDestinationButton = new JButton();
        OpenDestinationButton.setText("Öffnen");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(OpenDestinationButton, gbc);
        OpenDestinationText = new JTextField();
        OpenDestinationText.setEditable(false);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel1.add(OpenDestinationText, gbc);
        final JLabel label1 = new JLabel();
        label1.setText("Zielverzeichnis:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label1, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Quellverzeichnis:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label2, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer1, gbc);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        CreationMainPanel.add(panel2, gbc);
        panel2.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEmptyBorder(), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        final JLabel label3 = new JLabel();
        label3.setText("Bitte wählen Sie das Quellverzeichnis un das Zielverzeichnis für den BagIt-Prozess aus.");
        panel2.add(label3, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(553, 17), null, 0, false));
        final Spacer spacer2 = new Spacer();
        panel2.add(spacer2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        label1.setLabelFor(OpenDestinationText);
        label2.setLabelFor(OpenSourceText);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return CreationMainPanel;
    }
}
